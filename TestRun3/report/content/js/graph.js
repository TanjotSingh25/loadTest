/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3443.0, "series": [{"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 5.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 15.0], [3.6, 15.0], [3.7, 15.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 16.0], [4.2, 16.0], [4.3, 17.0], [4.4, 17.0], [4.5, 17.0], [4.6, 17.0], [4.7, 17.0], [4.8, 18.0], [4.9, 18.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 19.0], [5.4, 19.0], [5.5, 19.0], [5.6, 19.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 21.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 22.0], [6.8, 22.0], [6.9, 22.0], [7.0, 22.0], [7.1, 22.0], [7.2, 22.0], [7.3, 23.0], [7.4, 23.0], [7.5, 23.0], [7.6, 23.0], [7.7, 24.0], [7.8, 24.0], [7.9, 24.0], [8.0, 24.0], [8.1, 25.0], [8.2, 25.0], [8.3, 25.0], [8.4, 25.0], [8.5, 26.0], [8.6, 26.0], [8.7, 26.0], [8.8, 26.0], [8.9, 26.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 28.0], [9.5, 28.0], [9.6, 28.0], [9.7, 28.0], [9.8, 28.0], [9.9, 29.0], [10.0, 29.0], [10.1, 29.0], [10.2, 29.0], [10.3, 30.0], [10.4, 30.0], [10.5, 30.0], [10.6, 30.0], [10.7, 31.0], [10.8, 31.0], [10.9, 31.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 33.0], [11.4, 33.0], [11.5, 33.0], [11.6, 33.0], [11.7, 33.0], [11.8, 34.0], [11.9, 34.0], [12.0, 34.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 35.0], [12.5, 36.0], [12.6, 36.0], [12.7, 36.0], [12.8, 37.0], [12.9, 37.0], [13.0, 37.0], [13.1, 37.0], [13.2, 37.0], [13.3, 38.0], [13.4, 38.0], [13.5, 38.0], [13.6, 38.0], [13.7, 39.0], [13.8, 39.0], [13.9, 39.0], [14.0, 39.0], [14.1, 39.0], [14.2, 40.0], [14.3, 40.0], [14.4, 40.0], [14.5, 40.0], [14.6, 40.0], [14.7, 41.0], [14.8, 41.0], [14.9, 41.0], [15.0, 41.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 43.0], [15.6, 43.0], [15.7, 43.0], [15.8, 43.0], [15.9, 44.0], [16.0, 44.0], [16.1, 44.0], [16.2, 45.0], [16.3, 45.0], [16.4, 45.0], [16.5, 45.0], [16.6, 46.0], [16.7, 46.0], [16.8, 46.0], [16.9, 46.0], [17.0, 47.0], [17.1, 47.0], [17.2, 47.0], [17.3, 47.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 49.0], [17.9, 49.0], [18.0, 49.0], [18.1, 50.0], [18.2, 50.0], [18.3, 50.0], [18.4, 50.0], [18.5, 51.0], [18.6, 51.0], [18.7, 51.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 52.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 53.0], [19.6, 54.0], [19.7, 54.0], [19.8, 54.0], [19.9, 55.0], [20.0, 55.0], [20.1, 55.0], [20.2, 56.0], [20.3, 56.0], [20.4, 56.0], [20.5, 57.0], [20.6, 57.0], [20.7, 57.0], [20.8, 58.0], [20.9, 58.0], [21.0, 58.0], [21.1, 59.0], [21.2, 59.0], [21.3, 59.0], [21.4, 60.0], [21.5, 60.0], [21.6, 60.0], [21.7, 60.0], [21.8, 61.0], [21.9, 61.0], [22.0, 61.0], [22.1, 61.0], [22.2, 62.0], [22.3, 62.0], [22.4, 62.0], [22.5, 63.0], [22.6, 63.0], [22.7, 63.0], [22.8, 64.0], [22.9, 64.0], [23.0, 64.0], [23.1, 65.0], [23.2, 65.0], [23.3, 65.0], [23.4, 66.0], [23.5, 66.0], [23.6, 66.0], [23.7, 67.0], [23.8, 67.0], [23.9, 67.0], [24.0, 67.0], [24.1, 68.0], [24.2, 68.0], [24.3, 68.0], [24.4, 69.0], [24.5, 69.0], [24.6, 69.0], [24.7, 70.0], [24.8, 70.0], [24.9, 70.0], [25.0, 71.0], [25.1, 71.0], [25.2, 71.0], [25.3, 72.0], [25.4, 72.0], [25.5, 72.0], [25.6, 73.0], [25.7, 73.0], [25.8, 74.0], [25.9, 74.0], [26.0, 74.0], [26.1, 74.0], [26.2, 75.0], [26.3, 75.0], [26.4, 75.0], [26.5, 76.0], [26.6, 76.0], [26.7, 77.0], [26.8, 77.0], [26.9, 77.0], [27.0, 77.0], [27.1, 78.0], [27.2, 78.0], [27.3, 78.0], [27.4, 78.0], [27.5, 79.0], [27.6, 79.0], [27.7, 79.0], [27.8, 79.0], [27.9, 80.0], [28.0, 80.0], [28.1, 81.0], [28.2, 81.0], [28.3, 81.0], [28.4, 82.0], [28.5, 82.0], [28.6, 82.0], [28.7, 83.0], [28.8, 83.0], [28.9, 83.0], [29.0, 83.0], [29.1, 84.0], [29.2, 84.0], [29.3, 84.0], [29.4, 85.0], [29.5, 85.0], [29.6, 85.0], [29.7, 86.0], [29.8, 86.0], [29.9, 87.0], [30.0, 87.0], [30.1, 87.0], [30.2, 88.0], [30.3, 88.0], [30.4, 89.0], [30.5, 89.0], [30.6, 89.0], [30.7, 89.0], [30.8, 90.0], [30.9, 90.0], [31.0, 90.0], [31.1, 90.0], [31.2, 91.0], [31.3, 91.0], [31.4, 91.0], [31.5, 91.0], [31.6, 92.0], [31.7, 92.0], [31.8, 92.0], [31.9, 92.0], [32.0, 92.0], [32.1, 93.0], [32.2, 93.0], [32.3, 93.0], [32.4, 94.0], [32.5, 94.0], [32.6, 94.0], [32.7, 94.0], [32.8, 95.0], [32.9, 95.0], [33.0, 96.0], [33.1, 96.0], [33.2, 96.0], [33.3, 97.0], [33.4, 97.0], [33.5, 97.0], [33.6, 98.0], [33.7, 98.0], [33.8, 98.0], [33.9, 99.0], [34.0, 99.0], [34.1, 99.0], [34.2, 100.0], [34.3, 100.0], [34.4, 100.0], [34.5, 101.0], [34.6, 101.0], [34.7, 102.0], [34.8, 102.0], [34.9, 102.0], [35.0, 103.0], [35.1, 103.0], [35.2, 104.0], [35.3, 104.0], [35.4, 104.0], [35.5, 105.0], [35.6, 105.0], [35.7, 105.0], [35.8, 106.0], [35.9, 106.0], [36.0, 107.0], [36.1, 107.0], [36.2, 107.0], [36.3, 108.0], [36.4, 108.0], [36.5, 108.0], [36.6, 109.0], [36.7, 109.0], [36.8, 109.0], [36.9, 110.0], [37.0, 110.0], [37.1, 110.0], [37.2, 111.0], [37.3, 111.0], [37.4, 111.0], [37.5, 111.0], [37.6, 112.0], [37.7, 112.0], [37.8, 113.0], [37.9, 113.0], [38.0, 113.0], [38.1, 114.0], [38.2, 114.0], [38.3, 114.0], [38.4, 115.0], [38.5, 115.0], [38.6, 116.0], [38.7, 116.0], [38.8, 116.0], [38.9, 117.0], [39.0, 117.0], [39.1, 117.0], [39.2, 118.0], [39.3, 118.0], [39.4, 118.0], [39.5, 119.0], [39.6, 119.0], [39.7, 119.0], [39.8, 120.0], [39.9, 120.0], [40.0, 121.0], [40.1, 121.0], [40.2, 121.0], [40.3, 122.0], [40.4, 122.0], [40.5, 122.0], [40.6, 122.0], [40.7, 123.0], [40.8, 123.0], [40.9, 124.0], [41.0, 124.0], [41.1, 125.0], [41.2, 125.0], [41.3, 125.0], [41.4, 126.0], [41.5, 126.0], [41.6, 127.0], [41.7, 127.0], [41.8, 128.0], [41.9, 128.0], [42.0, 128.0], [42.1, 129.0], [42.2, 129.0], [42.3, 130.0], [42.4, 130.0], [42.5, 131.0], [42.6, 131.0], [42.7, 132.0], [42.8, 132.0], [42.9, 133.0], [43.0, 133.0], [43.1, 134.0], [43.2, 134.0], [43.3, 135.0], [43.4, 135.0], [43.5, 135.0], [43.6, 136.0], [43.7, 136.0], [43.8, 136.0], [43.9, 137.0], [44.0, 137.0], [44.1, 138.0], [44.2, 138.0], [44.3, 139.0], [44.4, 140.0], [44.5, 140.0], [44.6, 140.0], [44.7, 141.0], [44.8, 141.0], [44.9, 142.0], [45.0, 142.0], [45.1, 143.0], [45.2, 143.0], [45.3, 143.0], [45.4, 144.0], [45.5, 144.0], [45.6, 144.0], [45.7, 145.0], [45.8, 145.0], [45.9, 145.0], [46.0, 146.0], [46.1, 147.0], [46.2, 147.0], [46.3, 147.0], [46.4, 148.0], [46.5, 148.0], [46.6, 148.0], [46.7, 149.0], [46.8, 149.0], [46.9, 150.0], [47.0, 150.0], [47.1, 150.0], [47.2, 151.0], [47.3, 151.0], [47.4, 152.0], [47.5, 153.0], [47.6, 153.0], [47.7, 153.0], [47.8, 154.0], [47.9, 154.0], [48.0, 155.0], [48.1, 155.0], [48.2, 155.0], [48.3, 156.0], [48.4, 156.0], [48.5, 157.0], [48.6, 157.0], [48.7, 158.0], [48.8, 158.0], [48.9, 159.0], [49.0, 159.0], [49.1, 160.0], [49.2, 160.0], [49.3, 161.0], [49.4, 161.0], [49.5, 162.0], [49.6, 162.0], [49.7, 162.0], [49.8, 163.0], [49.9, 163.0], [50.0, 164.0], [50.1, 164.0], [50.2, 164.0], [50.3, 165.0], [50.4, 165.0], [50.5, 166.0], [50.6, 166.0], [50.7, 166.0], [50.8, 167.0], [50.9, 167.0], [51.0, 168.0], [51.1, 168.0], [51.2, 169.0], [51.3, 169.0], [51.4, 170.0], [51.5, 170.0], [51.6, 171.0], [51.7, 171.0], [51.8, 172.0], [51.9, 172.0], [52.0, 173.0], [52.1, 174.0], [52.2, 174.0], [52.3, 174.0], [52.4, 175.0], [52.5, 175.0], [52.6, 176.0], [52.7, 176.0], [52.8, 176.0], [52.9, 177.0], [53.0, 178.0], [53.1, 178.0], [53.2, 179.0], [53.3, 179.0], [53.4, 180.0], [53.5, 180.0], [53.6, 181.0], [53.7, 181.0], [53.8, 182.0], [53.9, 182.0], [54.0, 183.0], [54.1, 183.0], [54.2, 184.0], [54.3, 184.0], [54.4, 184.0], [54.5, 185.0], [54.6, 185.0], [54.7, 186.0], [54.8, 186.0], [54.9, 187.0], [55.0, 187.0], [55.1, 188.0], [55.2, 188.0], [55.3, 189.0], [55.4, 189.0], [55.5, 190.0], [55.6, 190.0], [55.7, 191.0], [55.8, 191.0], [55.9, 192.0], [56.0, 192.0], [56.1, 193.0], [56.2, 194.0], [56.3, 194.0], [56.4, 195.0], [56.5, 195.0], [56.6, 196.0], [56.7, 197.0], [56.8, 197.0], [56.9, 198.0], [57.0, 198.0], [57.1, 199.0], [57.2, 199.0], [57.3, 200.0], [57.4, 200.0], [57.5, 201.0], [57.6, 201.0], [57.7, 202.0], [57.8, 202.0], [57.9, 203.0], [58.0, 203.0], [58.1, 204.0], [58.2, 204.0], [58.3, 205.0], [58.4, 205.0], [58.5, 205.0], [58.6, 206.0], [58.7, 206.0], [58.8, 207.0], [58.9, 208.0], [59.0, 208.0], [59.1, 209.0], [59.2, 210.0], [59.3, 210.0], [59.4, 211.0], [59.5, 211.0], [59.6, 212.0], [59.7, 213.0], [59.8, 213.0], [59.9, 214.0], [60.0, 215.0], [60.1, 216.0], [60.2, 216.0], [60.3, 217.0], [60.4, 217.0], [60.5, 218.0], [60.6, 219.0], [60.7, 219.0], [60.8, 220.0], [60.9, 220.0], [61.0, 221.0], [61.1, 222.0], [61.2, 222.0], [61.3, 223.0], [61.4, 223.0], [61.5, 224.0], [61.6, 225.0], [61.7, 225.0], [61.8, 226.0], [61.9, 226.0], [62.0, 227.0], [62.1, 227.0], [62.2, 228.0], [62.3, 229.0], [62.4, 229.0], [62.5, 230.0], [62.6, 230.0], [62.7, 231.0], [62.8, 232.0], [62.9, 232.0], [63.0, 233.0], [63.1, 234.0], [63.2, 234.0], [63.3, 235.0], [63.4, 236.0], [63.5, 236.0], [63.6, 237.0], [63.7, 238.0], [63.8, 238.0], [63.9, 239.0], [64.0, 240.0], [64.1, 240.0], [64.2, 241.0], [64.3, 242.0], [64.4, 242.0], [64.5, 243.0], [64.6, 244.0], [64.7, 245.0], [64.8, 246.0], [64.9, 247.0], [65.0, 247.0], [65.1, 248.0], [65.2, 249.0], [65.3, 249.0], [65.4, 250.0], [65.5, 251.0], [65.6, 251.0], [65.7, 252.0], [65.8, 253.0], [65.9, 254.0], [66.0, 255.0], [66.1, 256.0], [66.2, 256.0], [66.3, 257.0], [66.4, 258.0], [66.5, 259.0], [66.6, 260.0], [66.7, 260.0], [66.8, 261.0], [66.9, 262.0], [67.0, 263.0], [67.1, 264.0], [67.2, 264.0], [67.3, 265.0], [67.4, 265.0], [67.5, 266.0], [67.6, 266.0], [67.7, 267.0], [67.8, 268.0], [67.9, 269.0], [68.0, 270.0], [68.1, 270.0], [68.2, 271.0], [68.3, 272.0], [68.4, 273.0], [68.5, 273.0], [68.6, 274.0], [68.7, 276.0], [68.8, 276.0], [68.9, 277.0], [69.0, 278.0], [69.1, 279.0], [69.2, 280.0], [69.3, 281.0], [69.4, 281.0], [69.5, 282.0], [69.6, 283.0], [69.7, 284.0], [69.8, 284.0], [69.9, 285.0], [70.0, 286.0], [70.1, 287.0], [70.2, 288.0], [70.3, 288.0], [70.4, 289.0], [70.5, 290.0], [70.6, 291.0], [70.7, 292.0], [70.8, 292.0], [70.9, 293.0], [71.0, 294.0], [71.1, 295.0], [71.2, 296.0], [71.3, 297.0], [71.4, 298.0], [71.5, 299.0], [71.6, 300.0], [71.7, 301.0], [71.8, 302.0], [71.9, 303.0], [72.0, 304.0], [72.1, 304.0], [72.2, 305.0], [72.3, 307.0], [72.4, 308.0], [72.5, 309.0], [72.6, 309.0], [72.7, 311.0], [72.8, 312.0], [72.9, 313.0], [73.0, 314.0], [73.1, 316.0], [73.2, 317.0], [73.3, 318.0], [73.4, 319.0], [73.5, 321.0], [73.6, 322.0], [73.7, 323.0], [73.8, 324.0], [73.9, 325.0], [74.0, 326.0], [74.1, 327.0], [74.2, 327.0], [74.3, 328.0], [74.4, 329.0], [74.5, 330.0], [74.6, 332.0], [74.7, 334.0], [74.8, 335.0], [74.9, 337.0], [75.0, 339.0], [75.1, 339.0], [75.2, 340.0], [75.3, 342.0], [75.4, 343.0], [75.5, 344.0], [75.6, 345.0], [75.7, 347.0], [75.8, 348.0], [75.9, 349.0], [76.0, 351.0], [76.1, 353.0], [76.2, 354.0], [76.3, 355.0], [76.4, 357.0], [76.5, 358.0], [76.6, 360.0], [76.7, 361.0], [76.8, 362.0], [76.9, 364.0], [77.0, 365.0], [77.1, 367.0], [77.2, 368.0], [77.3, 370.0], [77.4, 372.0], [77.5, 374.0], [77.6, 375.0], [77.7, 376.0], [77.8, 378.0], [77.9, 379.0], [78.0, 380.0], [78.1, 382.0], [78.2, 383.0], [78.3, 385.0], [78.4, 387.0], [78.5, 390.0], [78.6, 391.0], [78.7, 393.0], [78.8, 394.0], [78.9, 396.0], [79.0, 398.0], [79.1, 400.0], [79.2, 401.0], [79.3, 402.0], [79.4, 404.0], [79.5, 405.0], [79.6, 407.0], [79.7, 410.0], [79.8, 413.0], [79.9, 414.0], [80.0, 417.0], [80.1, 421.0], [80.2, 423.0], [80.3, 426.0], [80.4, 428.0], [80.5, 430.0], [80.6, 432.0], [80.7, 433.0], [80.8, 437.0], [80.9, 439.0], [81.0, 441.0], [81.1, 443.0], [81.2, 446.0], [81.3, 448.0], [81.4, 451.0], [81.5, 452.0], [81.6, 455.0], [81.7, 457.0], [81.8, 459.0], [81.9, 461.0], [82.0, 464.0], [82.1, 466.0], [82.2, 467.0], [82.3, 469.0], [82.4, 471.0], [82.5, 472.0], [82.6, 474.0], [82.7, 477.0], [82.8, 478.0], [82.9, 481.0], [83.0, 483.0], [83.1, 486.0], [83.2, 489.0], [83.3, 490.0], [83.4, 492.0], [83.5, 494.0], [83.6, 497.0], [83.7, 499.0], [83.8, 501.0], [83.9, 503.0], [84.0, 507.0], [84.1, 508.0], [84.2, 511.0], [84.3, 513.0], [84.4, 515.0], [84.5, 516.0], [84.6, 518.0], [84.7, 520.0], [84.8, 523.0], [84.9, 525.0], [85.0, 527.0], [85.1, 529.0], [85.2, 531.0], [85.3, 535.0], [85.4, 538.0], [85.5, 539.0], [85.6, 542.0], [85.7, 544.0], [85.8, 546.0], [85.9, 548.0], [86.0, 549.0], [86.1, 551.0], [86.2, 554.0], [86.3, 556.0], [86.4, 558.0], [86.5, 560.0], [86.6, 564.0], [86.7, 566.0], [86.8, 569.0], [86.9, 572.0], [87.0, 576.0], [87.1, 579.0], [87.2, 581.0], [87.3, 583.0], [87.4, 585.0], [87.5, 587.0], [87.6, 589.0], [87.7, 591.0], [87.8, 593.0], [87.9, 597.0], [88.0, 599.0], [88.1, 602.0], [88.2, 605.0], [88.3, 608.0], [88.4, 611.0], [88.5, 615.0], [88.6, 618.0], [88.7, 621.0], [88.8, 625.0], [88.9, 628.0], [89.0, 633.0], [89.1, 636.0], [89.2, 639.0], [89.3, 643.0], [89.4, 649.0], [89.5, 653.0], [89.6, 657.0], [89.7, 664.0], [89.8, 667.0], [89.9, 672.0], [90.0, 677.0], [90.1, 682.0], [90.2, 691.0], [90.3, 693.0], [90.4, 699.0], [90.5, 703.0], [90.6, 706.0], [90.7, 711.0], [90.8, 715.0], [90.9, 718.0], [91.0, 722.0], [91.1, 726.0], [91.2, 730.0], [91.3, 736.0], [91.4, 740.0], [91.5, 745.0], [91.6, 752.0], [91.7, 754.0], [91.8, 760.0], [91.9, 765.0], [92.0, 771.0], [92.1, 780.0], [92.2, 785.0], [92.3, 791.0], [92.4, 797.0], [92.5, 803.0], [92.6, 808.0], [92.7, 815.0], [92.8, 821.0], [92.9, 827.0], [93.0, 830.0], [93.1, 836.0], [93.2, 843.0], [93.3, 854.0], [93.4, 863.0], [93.5, 872.0], [93.6, 881.0], [93.7, 886.0], [93.8, 893.0], [93.9, 899.0], [94.0, 909.0], [94.1, 917.0], [94.2, 926.0], [94.3, 936.0], [94.4, 943.0], [94.5, 963.0], [94.6, 970.0], [94.7, 980.0], [94.8, 991.0], [94.9, 1009.0], [95.0, 1024.0], [95.1, 1031.0], [95.2, 1044.0], [95.3, 1061.0], [95.4, 1071.0], [95.5, 1082.0], [95.6, 1094.0], [95.7, 1102.0], [95.8, 1116.0], [95.9, 1128.0], [96.0, 1140.0], [96.1, 1163.0], [96.2, 1178.0], [96.3, 1186.0], [96.4, 1203.0], [96.5, 1216.0], [96.6, 1230.0], [96.7, 1243.0], [96.8, 1254.0], [96.9, 1280.0], [97.0, 1304.0], [97.1, 1321.0], [97.2, 1335.0], [97.3, 1358.0], [97.4, 1367.0], [97.5, 1384.0], [97.6, 1397.0], [97.7, 1415.0], [97.8, 1438.0], [97.9, 1463.0], [98.0, 1484.0], [98.1, 1515.0], [98.2, 1535.0], [98.3, 1559.0], [98.4, 1582.0], [98.5, 1614.0], [98.6, 1648.0], [98.7, 1676.0], [98.8, 1731.0], [98.9, 1764.0], [99.0, 1804.0], [99.1, 1843.0], [99.2, 1883.0], [99.3, 1956.0], [99.4, 2006.0], [99.5, 2063.0], [99.6, 2090.0], [99.7, 2175.0], [99.8, 2308.0], [99.9, 2435.0], [100.0, 3443.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 5.0], [11.2, 5.0], [11.3, 5.0], [11.4, 5.0], [11.5, 5.0], [11.6, 5.0], [11.7, 5.0], [11.8, 5.0], [11.9, 5.0], [12.0, 5.0], [12.1, 5.0], [12.2, 5.0], [12.3, 5.0], [12.4, 5.0], [12.5, 5.0], [12.6, 5.0], [12.7, 5.0], [12.8, 5.0], [12.9, 5.0], [13.0, 5.0], [13.1, 5.0], [13.2, 5.0], [13.3, 5.0], [13.4, 5.0], [13.5, 5.0], [13.6, 5.0], [13.7, 5.0], [13.8, 5.0], [13.9, 5.0], [14.0, 5.0], [14.1, 5.0], [14.2, 5.0], [14.3, 5.0], [14.4, 5.0], [14.5, 5.0], [14.6, 5.0], [14.7, 5.0], [14.8, 5.0], [14.9, 5.0], [15.0, 5.0], [15.1, 5.0], [15.2, 5.0], [15.3, 5.0], [15.4, 5.0], [15.5, 5.0], [15.6, 5.0], [15.7, 5.0], [15.8, 5.0], [15.9, 5.0], [16.0, 5.0], [16.1, 5.0], [16.2, 5.0], [16.3, 5.0], [16.4, 5.0], [16.5, 5.0], [16.6, 5.0], [16.7, 5.0], [16.8, 5.0], [16.9, 5.0], [17.0, 5.0], [17.1, 6.0], [17.2, 6.0], [17.3, 6.0], [17.4, 6.0], [17.5, 6.0], [17.6, 6.0], [17.7, 6.0], [17.8, 6.0], [17.9, 6.0], [18.0, 6.0], [18.1, 6.0], [18.2, 6.0], [18.3, 6.0], [18.4, 6.0], [18.5, 6.0], [18.6, 6.0], [18.7, 6.0], [18.8, 6.0], [18.9, 6.0], [19.0, 6.0], [19.1, 6.0], [19.2, 6.0], [19.3, 6.0], [19.4, 6.0], [19.5, 6.0], [19.6, 6.0], [19.7, 6.0], [19.8, 6.0], [19.9, 6.0], [20.0, 6.0], [20.1, 6.0], [20.2, 6.0], [20.3, 6.0], [20.4, 6.0], [20.5, 6.0], [20.6, 6.0], [20.7, 6.0], [20.8, 6.0], [20.9, 6.0], [21.0, 6.0], [21.1, 6.0], [21.2, 6.0], [21.3, 6.0], [21.4, 6.0], [21.5, 6.0], [21.6, 6.0], [21.7, 6.0], [21.8, 6.0], [21.9, 6.0], [22.0, 6.0], [22.1, 6.0], [22.2, 6.0], [22.3, 6.0], [22.4, 6.0], [22.5, 6.0], [22.6, 6.0], [22.7, 6.0], [22.8, 6.0], [22.9, 6.0], [23.0, 6.0], [23.1, 7.0], [23.2, 7.0], [23.3, 7.0], [23.4, 7.0], [23.5, 7.0], [23.6, 7.0], [23.7, 7.0], [23.8, 7.0], [23.9, 7.0], [24.0, 7.0], [24.1, 7.0], [24.2, 7.0], [24.3, 7.0], [24.4, 7.0], [24.5, 7.0], [24.6, 7.0], [24.7, 7.0], [24.8, 7.0], [24.9, 7.0], [25.0, 7.0], [25.1, 7.0], [25.2, 7.0], [25.3, 7.0], [25.4, 7.0], [25.5, 7.0], [25.6, 7.0], [25.7, 7.0], [25.8, 7.0], [25.9, 7.0], [26.0, 7.0], [26.1, 7.0], [26.2, 7.0], [26.3, 7.0], [26.4, 7.0], [26.5, 7.0], [26.6, 7.0], [26.7, 7.0], [26.8, 7.0], [26.9, 7.0], [27.0, 7.0], [27.1, 7.0], [27.2, 7.0], [27.3, 7.0], [27.4, 7.0], [27.5, 7.0], [27.6, 7.0], [27.7, 7.0], [27.8, 7.0], [27.9, 7.0], [28.0, 7.0], [28.1, 7.0], [28.2, 7.0], [28.3, 7.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 8.0], [31.1, 8.0], [31.2, 8.0], [31.3, 8.0], [31.4, 8.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 8.0], [33.1, 8.0], [33.2, 8.0], [33.3, 8.0], [33.4, 8.0], [33.5, 8.0], [33.6, 8.0], [33.7, 9.0], [33.8, 9.0], [33.9, 9.0], [34.0, 9.0], [34.1, 9.0], [34.2, 9.0], [34.3, 9.0], [34.4, 9.0], [34.5, 9.0], [34.6, 9.0], [34.7, 9.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 10.0], [38.4, 10.0], [38.5, 10.0], [38.6, 10.0], [38.7, 10.0], [38.8, 10.0], [38.9, 10.0], [39.0, 10.0], [39.1, 10.0], [39.2, 10.0], [39.3, 10.0], [39.4, 10.0], [39.5, 10.0], [39.6, 10.0], [39.7, 10.0], [39.8, 10.0], [39.9, 10.0], [40.0, 10.0], [40.1, 10.0], [40.2, 10.0], [40.3, 10.0], [40.4, 10.0], [40.5, 10.0], [40.6, 10.0], [40.7, 10.0], [40.8, 10.0], [40.9, 10.0], [41.0, 10.0], [41.1, 10.0], [41.2, 10.0], [41.3, 10.0], [41.4, 10.0], [41.5, 10.0], [41.6, 10.0], [41.7, 10.0], [41.8, 10.0], [41.9, 10.0], [42.0, 10.0], [42.1, 10.0], [42.2, 10.0], [42.3, 10.0], [42.4, 11.0], [42.5, 11.0], [42.6, 11.0], [42.7, 11.0], [42.8, 11.0], [42.9, 11.0], [43.0, 11.0], [43.1, 11.0], [43.2, 11.0], [43.3, 11.0], [43.4, 11.0], [43.5, 11.0], [43.6, 11.0], [43.7, 11.0], [43.8, 11.0], [43.9, 11.0], [44.0, 11.0], [44.1, 11.0], [44.2, 11.0], [44.3, 11.0], [44.4, 11.0], [44.5, 11.0], [44.6, 11.0], [44.7, 11.0], [44.8, 11.0], [44.9, 11.0], [45.0, 11.0], [45.1, 11.0], [45.2, 11.0], [45.3, 11.0], [45.4, 11.0], [45.5, 11.0], [45.6, 11.0], [45.7, 11.0], [45.8, 12.0], [45.9, 12.0], [46.0, 12.0], [46.1, 12.0], [46.2, 12.0], [46.3, 12.0], [46.4, 12.0], [46.5, 12.0], [46.6, 12.0], [46.7, 12.0], [46.8, 12.0], [46.9, 12.0], [47.0, 12.0], [47.1, 12.0], [47.2, 12.0], [47.3, 12.0], [47.4, 12.0], [47.5, 12.0], [47.6, 12.0], [47.7, 12.0], [47.8, 12.0], [47.9, 12.0], [48.0, 12.0], [48.1, 12.0], [48.2, 12.0], [48.3, 12.0], [48.4, 12.0], [48.5, 12.0], [48.6, 12.0], [48.7, 12.0], [48.8, 12.0], [48.9, 12.0], [49.0, 12.0], [49.1, 12.0], [49.2, 13.0], [49.3, 13.0], [49.4, 13.0], [49.5, 13.0], [49.6, 13.0], [49.7, 13.0], [49.8, 13.0], [49.9, 13.0], [50.0, 13.0], [50.1, 13.0], [50.2, 13.0], [50.3, 13.0], [50.4, 13.0], [50.5, 13.0], [50.6, 13.0], [50.7, 13.0], [50.8, 13.0], [50.9, 13.0], [51.0, 13.0], [51.1, 13.0], [51.2, 13.0], [51.3, 13.0], [51.4, 13.0], [51.5, 13.0], [51.6, 13.0], [51.7, 13.0], [51.8, 13.0], [51.9, 13.0], [52.0, 13.0], [52.1, 13.0], [52.2, 13.0], [52.3, 13.0], [52.4, 13.0], [52.5, 14.0], [52.6, 14.0], [52.7, 14.0], [52.8, 14.0], [52.9, 14.0], [53.0, 14.0], [53.1, 14.0], [53.2, 14.0], [53.3, 14.0], [53.4, 14.0], [53.5, 14.0], [53.6, 14.0], [53.7, 14.0], [53.8, 14.0], [53.9, 14.0], [54.0, 14.0], [54.1, 14.0], [54.2, 14.0], [54.3, 14.0], [54.4, 14.0], [54.5, 14.0], [54.6, 14.0], [54.7, 14.0], [54.8, 14.0], [54.9, 14.0], [55.0, 15.0], [55.1, 15.0], [55.2, 15.0], [55.3, 15.0], [55.4, 15.0], [55.5, 15.0], [55.6, 15.0], [55.7, 15.0], [55.8, 15.0], [55.9, 15.0], [56.0, 15.0], [56.1, 15.0], [56.2, 15.0], [56.3, 15.0], [56.4, 15.0], [56.5, 15.0], [56.6, 15.0], [56.7, 15.0], [56.8, 15.0], [56.9, 15.0], [57.0, 15.0], [57.1, 15.0], [57.2, 16.0], [57.3, 16.0], [57.4, 16.0], [57.5, 16.0], [57.6, 16.0], [57.7, 16.0], [57.8, 16.0], [57.9, 16.0], [58.0, 16.0], [58.1, 16.0], [58.2, 16.0], [58.3, 16.0], [58.4, 16.0], [58.5, 16.0], [58.6, 16.0], [58.7, 16.0], [58.8, 16.0], [58.9, 16.0], [59.0, 16.0], [59.1, 16.0], [59.2, 16.0], [59.3, 16.0], [59.4, 16.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 17.0], [60.1, 17.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 17.0], [61.3, 18.0], [61.4, 18.0], [61.5, 18.0], [61.6, 18.0], [61.7, 18.0], [61.8, 18.0], [61.9, 18.0], [62.0, 18.0], [62.1, 18.0], [62.2, 18.0], [62.3, 18.0], [62.4, 18.0], [62.5, 18.0], [62.6, 18.0], [62.7, 18.0], [62.8, 18.0], [62.9, 18.0], [63.0, 19.0], [63.1, 19.0], [63.2, 19.0], [63.3, 19.0], [63.4, 19.0], [63.5, 19.0], [63.6, 19.0], [63.7, 19.0], [63.8, 19.0], [63.9, 19.0], [64.0, 19.0], [64.1, 19.0], [64.2, 19.0], [64.3, 19.0], [64.4, 19.0], [64.5, 19.0], [64.6, 19.0], [64.7, 19.0], [64.8, 19.0], [64.9, 20.0], [65.0, 20.0], [65.1, 20.0], [65.2, 20.0], [65.3, 20.0], [65.4, 20.0], [65.5, 20.0], [65.6, 20.0], [65.7, 20.0], [65.8, 20.0], [65.9, 20.0], [66.0, 20.0], [66.1, 20.0], [66.2, 20.0], [66.3, 20.0], [66.4, 21.0], [66.5, 21.0], [66.6, 21.0], [66.7, 21.0], [66.8, 21.0], [66.9, 21.0], [67.0, 21.0], [67.1, 21.0], [67.2, 21.0], [67.3, 21.0], [67.4, 21.0], [67.5, 21.0], [67.6, 21.0], [67.7, 21.0], [67.8, 22.0], [67.9, 22.0], [68.0, 22.0], [68.1, 22.0], [68.2, 22.0], [68.3, 22.0], [68.4, 22.0], [68.5, 22.0], [68.6, 22.0], [68.7, 22.0], [68.8, 22.0], [68.9, 22.0], [69.0, 22.0], [69.1, 23.0], [69.2, 23.0], [69.3, 23.0], [69.4, 23.0], [69.5, 23.0], [69.6, 23.0], [69.7, 23.0], [69.8, 23.0], [69.9, 23.0], [70.0, 23.0], [70.1, 23.0], [70.2, 24.0], [70.3, 24.0], [70.4, 24.0], [70.5, 24.0], [70.6, 24.0], [70.7, 24.0], [70.8, 24.0], [70.9, 24.0], [71.0, 24.0], [71.1, 24.0], [71.2, 24.0], [71.3, 25.0], [71.4, 25.0], [71.5, 25.0], [71.6, 25.0], [71.7, 25.0], [71.8, 25.0], [71.9, 25.0], [72.0, 25.0], [72.1, 25.0], [72.2, 25.0], [72.3, 25.0], [72.4, 26.0], [72.5, 26.0], [72.6, 26.0], [72.7, 26.0], [72.8, 26.0], [72.9, 26.0], [73.0, 26.0], [73.1, 26.0], [73.2, 26.0], [73.3, 27.0], [73.4, 27.0], [73.5, 27.0], [73.6, 27.0], [73.7, 27.0], [73.8, 27.0], [73.9, 27.0], [74.0, 27.0], [74.1, 27.0], [74.2, 28.0], [74.3, 28.0], [74.4, 28.0], [74.5, 28.0], [74.6, 28.0], [74.7, 28.0], [74.8, 28.0], [74.9, 28.0], [75.0, 28.0], [75.1, 29.0], [75.2, 29.0], [75.3, 29.0], [75.4, 29.0], [75.5, 29.0], [75.6, 29.0], [75.7, 29.0], [75.8, 29.0], [75.9, 29.0], [76.0, 30.0], [76.1, 30.0], [76.2, 30.0], [76.3, 30.0], [76.4, 30.0], [76.5, 30.0], [76.6, 30.0], [76.7, 30.0], [76.8, 31.0], [76.9, 31.0], [77.0, 31.0], [77.1, 31.0], [77.2, 31.0], [77.3, 31.0], [77.4, 31.0], [77.5, 31.0], [77.6, 32.0], [77.7, 32.0], [77.8, 32.0], [77.9, 32.0], [78.0, 32.0], [78.1, 32.0], [78.2, 33.0], [78.3, 33.0], [78.4, 33.0], [78.5, 33.0], [78.6, 33.0], [78.7, 33.0], [78.8, 33.0], [78.9, 34.0], [79.0, 34.0], [79.1, 34.0], [79.2, 34.0], [79.3, 34.0], [79.4, 34.0], [79.5, 35.0], [79.6, 35.0], [79.7, 35.0], [79.8, 35.0], [79.9, 35.0], [80.0, 35.0], [80.1, 35.0], [80.2, 36.0], [80.3, 36.0], [80.4, 36.0], [80.5, 36.0], [80.6, 36.0], [80.7, 36.0], [80.8, 37.0], [80.9, 37.0], [81.0, 37.0], [81.1, 37.0], [81.2, 37.0], [81.3, 37.0], [81.4, 38.0], [81.5, 38.0], [81.6, 38.0], [81.7, 38.0], [81.8, 38.0], [81.9, 38.0], [82.0, 39.0], [82.1, 39.0], [82.2, 39.0], [82.3, 39.0], [82.4, 39.0], [82.5, 39.0], [82.6, 39.0], [82.7, 39.0], [82.8, 40.0], [82.9, 40.0], [83.0, 40.0], [83.1, 40.0], [83.2, 40.0], [83.3, 41.0], [83.4, 41.0], [83.5, 41.0], [83.6, 41.0], [83.7, 42.0], [83.8, 42.0], [83.9, 42.0], [84.0, 42.0], [84.1, 42.0], [84.2, 42.0], [84.3, 43.0], [84.4, 43.0], [84.5, 43.0], [84.6, 43.0], [84.7, 43.0], [84.8, 44.0], [84.9, 44.0], [85.0, 44.0], [85.1, 44.0], [85.2, 44.0], [85.3, 45.0], [85.4, 45.0], [85.5, 45.0], [85.6, 45.0], [85.7, 46.0], [85.8, 46.0], [85.9, 46.0], [86.0, 47.0], [86.1, 47.0], [86.2, 47.0], [86.3, 47.0], [86.4, 48.0], [86.5, 48.0], [86.6, 48.0], [86.7, 48.0], [86.8, 48.0], [86.9, 49.0], [87.0, 49.0], [87.1, 49.0], [87.2, 49.0], [87.3, 50.0], [87.4, 50.0], [87.5, 50.0], [87.6, 50.0], [87.7, 51.0], [87.8, 51.0], [87.9, 51.0], [88.0, 52.0], [88.1, 52.0], [88.2, 52.0], [88.3, 52.0], [88.4, 53.0], [88.5, 53.0], [88.6, 53.0], [88.7, 54.0], [88.8, 55.0], [88.9, 55.0], [89.0, 55.0], [89.1, 56.0], [89.2, 56.0], [89.3, 56.0], [89.4, 57.0], [89.5, 58.0], [89.6, 58.0], [89.7, 59.0], [89.8, 60.0], [89.9, 61.0], [90.0, 61.0], [90.1, 62.0], [90.2, 63.0], [90.3, 64.0], [90.4, 64.0], [90.5, 65.0], [90.6, 67.0], [90.7, 68.0], [90.8, 69.0], [90.9, 70.0], [91.0, 70.0], [91.1, 71.0], [91.2, 72.0], [91.3, 73.0], [91.4, 74.0], [91.5, 74.0], [91.6, 75.0], [91.7, 76.0], [91.8, 78.0], [91.9, 79.0], [92.0, 79.0], [92.1, 81.0], [92.2, 82.0], [92.3, 83.0], [92.4, 84.0], [92.5, 85.0], [92.6, 86.0], [92.7, 87.0], [92.8, 88.0], [92.9, 89.0], [93.0, 90.0], [93.1, 91.0], [93.2, 92.0], [93.3, 94.0], [93.4, 94.0], [93.5, 96.0], [93.6, 97.0], [93.7, 98.0], [93.8, 99.0], [93.9, 100.0], [94.0, 102.0], [94.1, 103.0], [94.2, 104.0], [94.3, 105.0], [94.4, 107.0], [94.5, 109.0], [94.6, 111.0], [94.7, 112.0], [94.8, 114.0], [94.9, 116.0], [95.0, 117.0], [95.1, 118.0], [95.2, 120.0], [95.3, 123.0], [95.4, 124.0], [95.5, 126.0], [95.6, 128.0], [95.7, 129.0], [95.8, 132.0], [95.9, 133.0], [96.0, 135.0], [96.1, 136.0], [96.2, 138.0], [96.3, 140.0], [96.4, 143.0], [96.5, 145.0], [96.6, 147.0], [96.7, 149.0], [96.8, 151.0], [96.9, 152.0], [97.0, 155.0], [97.1, 157.0], [97.2, 160.0], [97.3, 161.0], [97.4, 163.0], [97.5, 166.0], [97.6, 168.0], [97.7, 171.0], [97.8, 173.0], [97.9, 175.0], [98.0, 178.0], [98.1, 180.0], [98.2, 182.0], [98.3, 184.0], [98.4, 186.0], [98.5, 189.0], [98.6, 192.0], [98.7, 198.0], [98.8, 206.0], [98.9, 216.0], [99.0, 233.0], [99.1, 259.0], [99.2, 369.0], [99.3, 415.0], [99.4, 435.0], [99.5, 455.0], [99.6, 471.0], [99.7, 479.0], [99.8, 483.0], [99.9, 492.0], [100.0, 557.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9383.0, "series": [{"data": [[0.0, 3412.0], [600.0, 240.0], [700.0, 204.0], [800.0, 144.0], [900.0, 95.0], [1000.0, 83.0], [1100.0, 70.0], [1200.0, 58.0], [1300.0, 65.0], [1400.0, 44.0], [1500.0, 40.0], [100.0, 2318.0], [1600.0, 29.0], [1700.0, 25.0], [1800.0, 23.0], [1900.0, 13.0], [2000.0, 25.0], [2100.0, 11.0], [2200.0, 8.0], [2300.0, 5.0], [2400.0, 8.0], [2500.0, 3.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [200.0, 1429.0], [3400.0, 1.0], [300.0, 749.0], [400.0, 464.0], [500.0, 430.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[0.0, 9383.0], [300.0, 8.0], [100.0, 488.0], [200.0, 44.0], [400.0, 73.0], [500.0, 4.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 195.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 18375.0, "series": [{"data": [[0.0, 18375.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1430.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 195.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 654.3943415997235, "minX": 1.7427966E12, "maxY": 865.1537379067703, "series": [{"data": [[1.74279666E12, 654.3943415997235], [1.7427966E12, 865.1537379067703]], "isOverall": false, "label": "User Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74279666E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 1617.0, "series": [{"data": [[381.0, 486.2142857142857], [380.0, 455.5], [379.0, 361.3333333333333], [378.0, 589.0], [377.0, 587.3333333333334], [375.0, 1194.0], [392.0, 369.3333333333333], [396.0, 807.0], [395.0, 310.0], [394.0, 486.0], [393.0, 369.0], [389.0, 619.0], [388.0, 674.6666666666666], [386.0, 527.0], [385.0, 459.0], [384.0, 461.0], [410.0, 415.0], [409.0, 259.0], [406.0, 402.2], [405.0, 621.0], [403.0, 565.5], [401.0, 643.5], [400.0, 242.0], [423.0, 334.3333333333333], [446.0, 517.0], [443.0, 291.6], [442.0, 359.6], [432.0, 222.0], [456.0, 397.5], [455.0, 358.1666666666667], [454.0, 444.0], [453.0, 370.0], [478.0, 248.66666666666669], [477.0, 461.75], [475.0, 349.5], [474.0, 156.0], [472.0, 226.0], [471.0, 414.0], [467.0, 374.0], [466.0, 336.5], [464.0, 85.0], [493.0, 58.0], [495.0, 26.0], [492.0, 118.0], [483.0, 256.6666666666667], [491.0, 390.0], [490.0, 189.0], [489.0, 445.33333333333337], [488.0, 177.42857142857142], [486.0, 389.5], [485.0, 493.0], [484.0, 312.0], [511.0, 1516.0], [510.0, 668.52], [507.0, 448.0], [506.0, 1617.0], [502.0, 33.0], [496.0, 107.0], [536.0, 57.93333333333334], [540.0, 67.42553191489361], [541.0, 76.04444444444445], [542.0, 580.0305343511451], [543.0, 98.08510638297872], [529.0, 252.33333333333331], [528.0, 86.78571428571428], [531.0, 68.02941176470588], [530.0, 59.74193548387094], [539.0, 53.441176470588246], [538.0, 102.66037735849056], [527.0, 99.5], [512.0, 769.5], [514.0, 333.0909090909091], [513.0, 41.2], [516.0, 78.6086956521739], [515.0, 114.5625], [519.0, 52.38461538461539], [518.0, 191.5], [517.0, 546.3999999999999], [526.0, 84.6], [525.0, 104.75], [524.0, 117.69230769230771], [522.0, 78.66666666666667], [521.0, 90.33333333333334], [520.0, 87.11111111111111], [523.0, 53.857142857142854], [537.0, 180.83333333333334], [533.0, 76.31428571428572], [534.0, 50.76190476190476], [535.0, 56.72727272727273], [532.0, 48.2972972972973], [570.0, 197.04], [574.0, 138.4], [573.0, 123.75000000000001], [572.0, 118.74074074074076], [571.0, 141.95], [559.0, 132.51219512195124], [568.0, 117.0], [569.0, 136.34615384615384], [551.0, 64.53658536585367], [547.0, 109.51724137931033], [548.0, 140.51724137931035], [550.0, 94.3103448275862], [549.0, 86.91304347826087], [545.0, 86.24324324324326], [544.0, 143.925], [546.0, 115.21052631578948], [558.0, 92.19444444444443], [556.0, 65.43243243243242], [555.0, 81.06060606060606], [553.0, 114.86363636363636], [552.0, 40.9375], [554.0, 99.1923076923077], [557.0, 109.47727272727273], [567.0, 147.43333333333334], [566.0, 126.19999999999999], [563.0, 130.81249999999997], [564.0, 143.12500000000003], [565.0, 140.66666666666666], [562.0, 133.27906976744188], [561.0, 117.6296296296296], [560.0, 116.91525423728811], [575.0, 129.80392156862746], [581.0, 103.14999999999999], [593.0, 107.58333333333333], [595.0, 141.29268292682923], [598.0, 225.0], [599.0, 229.33333333333334], [594.0, 195.52941176470588], [596.0, 180.04166666666669], [597.0, 189.64285714285717], [592.0, 101.21052631578948], [606.0, 129.125], [605.0, 272.85714285714283], [607.0, 168.4], [604.0, 217.72727272727275], [603.0, 131.5], [600.0, 118.25], [601.0, 234.53846153846152], [602.0, 139.75], [583.0, 127.2], [582.0, 93.69767441860463], [580.0, 134.78125], [578.0, 115.94000000000003], [577.0, 137.54901960784315], [576.0, 157.07142857142858], [579.0, 169.00000000000003], [591.0, 102.70588235294117], [588.0, 117.62500000000001], [587.0, 106.65217391304348], [584.0, 175.2592592592593], [585.0, 180.37037037037038], [586.0, 139.85714285714286], [590.0, 128.0909090909091], [589.0, 90.3125], [632.0, 170.72222222222223], [638.0, 286.52941176470586], [639.0, 260.3888888888889], [624.0, 154.0], [627.0, 291.90000000000003], [626.0, 257.5], [625.0, 246.2], [629.0, 224.75], [628.0, 322.1666666666667], [636.0, 232.00000000000003], [634.0, 237.90909090909093], [633.0, 157.84615384615387], [635.0, 178.33333333333331], [637.0, 286.57142857142856], [620.0, 336.29999999999995], [612.0, 136.8], [611.0, 209.66666666666669], [610.0, 161.25], [609.0, 192.63636363636363], [608.0, 180.25], [623.0, 248.75], [622.0, 349.87500000000006], [621.0, 235.44444444444446], [614.0, 236.66666666666666], [615.0, 282.3333333333333], [613.0, 115.75], [616.0, 238.33333333333334], [617.0, 338.375], [619.0, 367.5], [618.0, 375.5], [631.0, 134.42857142857142], [630.0, 296.25], [665.0, 283.875], [669.0, 250.8], [648.0, 149.8857142857143], [649.0, 126.18518518518516], [653.0, 181.52173913043478], [651.0, 143.125], [652.0, 198.06666666666666], [650.0, 111.15384615384616], [655.0, 177.45], [642.0, 273.0], [643.0, 237.41666666666663], [641.0, 168.53846153846158], [640.0, 219.5], [646.0, 258.2], [647.0, 143.35483870967735], [664.0, 158.75], [645.0, 225.71428571428572], [644.0, 221.60000000000002], [654.0, 145.08333333333334], [671.0, 232.09999999999997], [670.0, 197.6315789473684], [657.0, 201.54545454545456], [658.0, 227.875], [656.0, 182.5], [660.0, 210.73333333333335], [659.0, 212.3461538461538], [668.0, 173.15789473684205], [667.0, 265.90909090909093], [666.0, 229.7272727272727], [662.0, 217.05882352941174], [663.0, 358.3], [661.0, 155.85000000000002], [697.0, 444.41025641025635], [702.0, 336.5000000000001], [703.0, 733.9000000000001], [689.0, 377.3125], [688.0, 350.3333333333333], [691.0, 339.3513513513513], [690.0, 395.33333333333337], [700.0, 330.5348837209303], [701.0, 366.5769230769231], [699.0, 321.1521739130434], [698.0, 334.45714285714297], [694.0, 430.5714285714286], [695.0, 371.0789473684211], [693.0, 391.4827586206897], [696.0, 316.56], [679.0, 256.65384615384613], [678.0, 309.23529411764713], [677.0, 279.30769230769226], [676.0, 249.36842105263156], [675.0, 235.17391304347822], [674.0, 333.1578947368421], [673.0, 292.5652173913043], [686.0, 426.6086956521739], [687.0, 251.88888888888889], [672.0, 129.5], [684.0, 337.1860465116279], [683.0, 352.89189189189176], [682.0, 254.95454545454544], [681.0, 362.61764705882354], [680.0, 365.8571428571429], [685.0, 263.2352941176471], [692.0, 370.7058823529412], [710.0, 325.0], [733.0, 275.4761904761905], [735.0, 462.1944444444444], [721.0, 361.2222222222223], [722.0, 344.3124999999999], [720.0, 364.43478260869574], [734.0, 344.96666666666664], [731.0, 391.74999999999994], [732.0, 361.2333333333334], [730.0, 317.5238095238096], [728.0, 285.5714285714286], [711.0, 537.5714285714284], [729.0, 385.47999999999996], [709.0, 344.8461538461538], [708.0, 323.125], [706.0, 515.0], [705.0, 441.00000000000006], [704.0, 225.55555555555554], [717.0, 324.17500000000007], [718.0, 308.56521739130443], [719.0, 302.6046511627907], [707.0, 385.7647058823529], [716.0, 319.3902439024389], [714.0, 306.25454545454545], [715.0, 355.1], [713.0, 560.2692307692307], [712.0, 486.40000000000003], [727.0, 404.25], [726.0, 348.96666666666664], [724.0, 262.8604651162791], [725.0, 359.8888888888889], [723.0, 360.9782608695652], [762.0, 400.83333333333326], [763.0, 491.3846153846155], [764.0, 331.36111111111114], [766.0, 391.65573770491795], [765.0, 448.88571428571424], [767.0, 564.9523809523807], [753.0, 288.50909090909084], [752.0, 259.030303030303], [761.0, 454.5000000000001], [760.0, 443.7901234567901], [743.0, 205.32258064516128], [740.0, 237.10000000000002], [741.0, 286.625], [742.0, 426.6363636363636], [739.0, 439.73076923076934], [736.0, 385.235294117647], [738.0, 423.6], [737.0, 730.5294117647057], [754.0, 205.91176470588232], [759.0, 471.64285714285717], [758.0, 469.148148148148], [757.0, 279.4857142857143], [755.0, 367.18604651162786], [756.0, 564.1935483870968], [751.0, 298.2105263157895], [750.0, 294.04999999999995], [749.0, 359.1212121212121], [748.0, 227.55882352941177], [747.0, 318.65000000000003], [745.0, 408.26666666666665], [746.0, 467.25], [744.0, 322.1428571428571], [795.0, 414.38095238095246], [775.0, 449.20754716981133], [792.0, 398.5], [774.0, 599.9622641509433], [773.0, 540.1408450704226], [776.0, 539.7460317460317], [777.0, 534.408163265306], [768.0, 551.1014492753627], [772.0, 520.7096774193549], [771.0, 649.8000000000002], [769.0, 456.421052631579], [770.0, 465.6315789473684], [783.0, 556.3157894736842], [782.0, 392.27027027027026], [781.0, 459.18181818181813], [780.0, 414.88571428571436], [779.0, 468.8947368421053], [778.0, 555.7078651685395], [796.0, 496.03571428571416], [794.0, 431.10810810810824], [793.0, 431.1875], [797.0, 531.75], [798.0, 427.29411764705884], [784.0, 460.8571428571429], [799.0, 246.90909090909088], [786.0, 447.2564102564103], [785.0, 374.6923076923079], [788.0, 549.0666666666668], [787.0, 430.3714285714287], [791.0, 302.99999999999994], [790.0, 584.8333333333335], [789.0, 249.45833333333334], [807.0, 409.04166666666674], [827.0, 272.5], [830.0, 227.66666666666666], [829.0, 141.0], [828.0, 114.2], [820.0, 135.11111111111111], [823.0, 150.77777777777777], [822.0, 305.66666666666663], [821.0, 230.77777777777777], [818.0, 373.0555555555556], [816.0, 794.1153846153848], [817.0, 665.6666666666666], [819.0, 836.5], [831.0, 352.2], [826.0, 160.9375], [810.0, 371.53125], [815.0, 459.88888888888886], [800.0, 325.68000000000006], [813.0, 445.6], [812.0, 408.4], [811.0, 347.0810810810812], [814.0, 297.6875], [808.0, 270.75], [809.0, 290.51428571428573], [825.0, 282.25], [804.0, 327.34146341463406], [805.0, 803.0625], [806.0, 386.1578947368422], [801.0, 436.88000000000005], [802.0, 479.3846153846155], [803.0, 429.3214285714286], [824.0, 167.16666666666669], [838.0, 474.5], [861.0, 57.25], [857.0, 121.45454545454547], [860.0, 180.33333333333334], [859.0, 485.0], [858.0, 128.75], [839.0, 13.0], [834.0, 128.74999999999997], [833.0, 220.5], [835.0, 176.8], [836.0, 166.5], [837.0, 180.2], [856.0, 8.0], [855.0, 182.33333333333334], [854.0, 362.0], [847.0, 105.5], [846.0, 49.0], [843.0, 141.83333333333334], [844.0, 142.75], [845.0, 224.6], [842.0, 214.0], [840.0, 205.5], [841.0, 179.14285714285717], [832.0, 160.66666666666666], [862.0, 97.33333333333333], [852.0, 239.0], [850.0, 114.5], [848.0, 227.5], [851.0, 262.57142857142856], [863.0, 75.0], [888.0, 96.44444444444444], [876.0, 115.19047619047618], [868.0, 42.0], [870.0, 149.9285714285714], [869.0, 146.8], [871.0, 133.71428571428572], [889.0, 80.91666666666667], [891.0, 86.8], [892.0, 127.25], [893.0, 12.0], [895.0, 142.0], [894.0, 86.0], [890.0, 32.8], [872.0, 135.75], [873.0, 149.23076923076923], [874.0, 126.45833333333336], [875.0, 125.94999999999999], [867.0, 111.6], [864.0, 155.8], [879.0, 96.80000000000001], [865.0, 112.0], [866.0, 116.66666666666666], [877.0, 114.20689655172414], [878.0, 115.61538461538461], [880.0, 125.7142857142857], [881.0, 107.93939393939394], [884.0, 104.3], [883.0, 117.95652173913042], [882.0, 137.58333333333331], [885.0, 44.44444444444444], [887.0, 58.75], [886.0, 50.5], [902.0, 146.85714285714286], [908.0, 93.0], [898.0, 107.4], [899.0, 150.66666666666666], [897.0, 66.0], [909.0, 134.5], [910.0, 205.0], [911.0, 149.0], [896.0, 112.0], [900.0, 130.66666666666666], [901.0, 85.42857142857143], [913.0, 62.0], [914.0, 122.0], [927.0, 272.5], [926.0, 223.875], [925.0, 153.55555555555554], [924.0, 22.0], [922.0, 189.7142857142857], [903.0, 148.25], [920.0, 264.3333333333333], [921.0, 256.75], [923.0, 105.75], [915.0, 54.4], [918.0, 8.0], [919.0, 206.2], [917.0, 224.33333333333331], [916.0, 179.66666666666666], [904.0, 90.0], [905.0, 76.66666666666667], [906.0, 58.666666666666664], [907.0, 70.5], [933.0, 15.0], [942.0, 107.0], [929.0, 71.33333333333333], [928.0, 13.2], [943.0, 100.625], [931.0, 218.49999999999997], [930.0, 171.77777777777774], [932.0, 200.5], [935.0, 91.75], [934.0, 81.0], [952.0, 58.0], [955.0, 178.56250000000003], [954.0, 155.60000000000008], [953.0, 200.7222222222222], [956.0, 252.76923076923077], [957.0, 274.8], [958.0, 260.5], [944.0, 147.5], [945.0, 87.0], [946.0, 43.0], [949.0, 68.8], [947.0, 238.4], [948.0, 235.85714285714283], [951.0, 208.2], [950.0, 184.0], [938.0, 15.666666666666668], [936.0, 155.625], [937.0, 106.4], [939.0, 155.30769230769232], [941.0, 193.23333333333332], [940.0, 205.11111111111111], [975.0, 49.5], [963.0, 39.0], [964.0, 16.0], [965.0, 23.5], [967.0, 45.0], [966.0, 53.0], [984.0, 62.8], [985.0, 48.5], [987.0, 49.0], [986.0, 40.25], [968.0, 53.5], [971.0, 59.5], [972.0, 26.5], [973.0, 77.5], [974.0, 49.0], [978.0, 29.0], [982.0, 62.0], [983.0, 47.5], [979.0, 32.333333333333336], [981.0, 60.0], [989.0, 49.5], [990.0, 61.0], [991.0, 53.0], [977.0, 43.666666666666664], [976.0, 391.0], [988.0, 44.2], [1018.0, 56.266666666666666], [1004.0, 29.25], [1005.0, 49.0], [1003.0, 62.0], [1001.0, 36.0], [1000.0, 36.0], [1002.0, 13.0], [1006.0, 36.0], [1007.0, 34.0], [992.0, 48.333333333333336], [995.0, 52.333333333333336], [996.0, 119.0], [1017.0, 143.25], [999.0, 38.0], [998.0, 34.666666666666664], [1014.0, 11.666666666666666], [1015.0, 15.0], [1011.0, 96.0], [1009.0, 188.33333333333334], [1008.0, 55.0], [1010.0, 43.75], [1013.0, 37.0], [1012.0, 462.0], [1023.0, 14.0], [1022.0, 34.333333333333336], [1020.0, 86.14285714285714], [1019.0, 27.0], [1021.0, 104.33333333333334], [1038.0, 61.0], [1051.0, 64.0], [1025.0, 184.66666666666666], [1026.0, 181.5], [1024.0, 37.0], [1027.0, 241.71428571428572], [1036.0, 256.0], [1037.0, 537.3333333333334], [1034.0, 46.0], [1035.0, 136.0], [1032.0, 253.5], [1033.0, 27.5], [1031.0, 27.0], [1028.0, 400.33333333333337], [1029.0, 26.0], [1030.0, 331.0], [1041.0, 284.0], [1042.0, 41.0], [1045.0, 78.0], [1049.0, 40.0], [1050.0, 127.75000000000001], [1048.0, 39.333333333333336], [1046.0, 258.6666666666667], [1047.0, 58.0], [1052.0, 78.0], [1054.0, 387.6666666666667], [1053.0, 390.33333333333337], [1055.0, 531.0], [1058.0, 209.14285714285714], [1059.0, 391.75], [1057.0, 368.5], [1056.0, 162.5], [1087.0, 13.0], [1086.0, 189.66666666666666], [1084.0, 113.25], [1085.0, 123.5], [1082.0, 11.0], [1080.0, 198.75], [1083.0, 16.0], [1079.0, 127.3181818181818], [1078.0, 171.92857142857144], [1077.0, 162.16666666666669], [1075.0, 189.25], [1073.0, 230.6], [1039.0, 534.5], [1072.0, 238.33333333333331], [1076.0, 258.2857142857143], [1061.0, 245.0], [1063.0, 305.0], [1062.0, 420.5], [1064.0, 383.3333333333333], [1065.0, 357.66666666666663], [1066.0, 559.0], [1068.0, 22.0], [1070.0, 157.5], [1069.0, 541.5], [1137.0, 35.0], [1088.0, 18.0], [1097.0, 25.666666666666668], [1103.0, 138.5], [1099.0, 167.0], [1098.0, 213.0], [1122.0, 128.5], [1121.0, 210.75], [1120.0, 209.0], [1149.0, 33.0], [1143.0, 239.5], [1141.0, 204.0], [1144.0, 189.0], [1138.0, 180.5], [1139.0, 43.5], [1123.0, 191.0], [1126.0, 30.666666666666668], [1127.0, 180.42857142857144], [1129.0, 39.142857142857146], [1130.0, 24.0], [1131.0, 18.0], [1132.0, 116.16666666666666], [1133.0, 32.0], [1134.0, 152.0], [1135.0, 120.57142857142857], [1104.0, 40.0], [1108.0, 22.5], [1107.0, 24.0], [1096.0, 37.0], [1095.0, 232.0], [1094.0, 198.5], [1091.0, 266.3333333333333], [1089.0, 227.0], [1111.0, 24.333333333333332], [1112.0, 93.25], [1113.0, 23.0], [1114.0, 128.0], [1118.0, 63.33333333333333], [1115.0, 204.0], [1117.0, 179.0], [1119.0, 31.25], [1153.0, 47.0], [1152.0, 52.0], [1161.0, 184.4], [1159.0, 60.333333333333336], [1160.0, 56.0], [1164.0, 104.25], [1176.0, 86.66666666666667], [1173.0, 77.0], [1171.0, 91.0], [1168.0, 209.0], [1180.0, 97.0], [1178.0, 205.0], [1182.0, 193.0], [1183.0, 97.0], [1184.0, 117.0], [1208.0, 167.0], [1207.0, 170.0], [1205.0, 205.0], [1201.0, 122.0], [1166.0, 235.0], [1202.0, 136.0], [1185.0, 93.0], [1195.0, 130.0], [1192.0, 118.0], [1216.0, 156.5]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[715.2840000000007, 283.75859999999943]], "isOverall": false, "label": "14 Register Request-Aggregated", "isController": false}, {"data": [[2.0, 7.0], [4.0, 6.5], [5.0, 4.0], [6.0, 2.0], [8.0, 3.5], [10.0, 2.5], [11.0, 4.0], [12.0, 3.0], [14.0, 4.5], [15.0, 4.0], [16.0, 5.0], [18.0, 3.0], [19.0, 5.0], [20.0, 3.5], [23.0, 3.0], [25.0, 2.0], [26.0, 2.0], [27.0, 2.0], [28.0, 3.0], [29.0, 3.0], [33.0, 2.0], [32.0, 2.6666666666666665], [35.0, 2.5], [37.0, 2.0], [36.0, 2.0], [39.0, 3.0], [38.0, 1.0], [40.0, 2.0], [43.0, 2.0], [42.0, 3.5], [45.0, 2.0], [44.0, 2.0], [47.0, 2.0], [46.0, 2.0], [49.0, 5.0], [48.0, 5.0], [51.0, 2.0], [53.0, 3.0], [52.0, 4.0], [54.0, 2.0], [57.0, 2.0], [56.0, 4.0], [59.0, 2.0], [58.0, 4.0], [61.0, 1.0], [60.0, 4.0], [63.0, 2.0], [62.0, 2.0], [67.0, 3.0], [65.0, 3.0], [64.0, 3.0], [70.0, 3.0], [75.0, 2.0], [74.0, 3.0], [73.0, 4.666666666666667], [72.0, 4.5], [79.0, 5.0], [78.0, 6.0], [76.0, 8.0], [83.0, 3.0], [82.0, 4.0], [81.0, 4.0], [80.0, 5.0], [87.0, 4.0], [86.0, 2.0], [85.0, 3.5], [91.0, 4.0], [90.0, 3.0], [89.0, 5.0], [88.0, 4.0], [95.0, 4.0], [94.0, 5.333333333333333], [99.0, 8.0], [98.0, 4.0], [96.0, 8.0], [103.0, 4.0], [102.0, 8.0], [101.0, 5.0], [100.0, 8.0], [107.0, 10.0], [106.0, 9.0], [105.0, 5.0], [109.0, 8.0], [108.0, 9.0], [115.0, 14.0], [114.0, 17.0], [112.0, 5.5], [119.0, 14.0], [117.0, 11.666666666666666], [116.0, 9.0], [123.0, 20.25], [120.0, 12.0], [127.0, 13.0], [126.0, 8.0], [124.0, 8.0], [135.0, 24.0], [134.0, 35.0], [133.0, 35.0], [132.0, 25.5], [129.0, 69.0], [128.0, 34.0], [143.0, 34.0], [142.0, 18.5], [140.0, 34.0], [139.0, 45.0], [138.0, 37.0], [137.0, 55.0], [136.0, 21.0], [149.0, 29.0], [148.0, 49.5], [147.0, 42.5], [145.0, 62.0], [159.0, 58.5], [158.0, 45.5], [157.0, 43.0], [154.0, 32.5], [153.0, 50.5], [167.0, 52.0], [165.0, 54.0], [163.0, 49.0], [162.0, 55.0], [161.0, 5.0], [160.0, 48.5], [174.0, 8.0], [172.0, 10.0], [171.0, 2.0], [170.0, 52.5], [168.0, 52.0], [182.0, 24.0], [181.0, 14.0], [180.0, 17.0], [178.0, 19.0], [177.0, 7.0], [176.0, 4.0], [191.0, 26.0], [190.0, 27.0], [188.0, 31.0], [187.0, 27.0], [186.0, 25.0], [184.0, 26.5], [199.0, 73.0], [198.0, 50.0], [196.0, 44.0], [195.0, 30.0], [194.0, 30.0], [193.0, 28.0], [207.0, 25.0], [206.0, 36.4], [201.0, 24.0], [200.0, 30.0], [214.0, 19.0], [213.0, 18.0], [212.0, 19.0], [211.0, 45.5], [208.0, 38.0], [222.0, 31.0], [221.0, 27.0], [220.0, 32.5], [219.0, 48.0], [218.0, 34.0], [216.0, 27.5], [231.0, 14.0], [228.0, 17.0], [226.0, 32.0], [239.0, 5.0], [238.0, 6.0], [237.0, 1.0], [236.0, 2.0], [235.0, 1.0], [234.0, 2.0], [233.0, 3.0], [232.0, 21.6], [245.0, 11.0], [244.0, 11.0], [243.0, 4.0], [242.0, 11.0], [241.0, 6.5], [253.0, 8.0], [252.0, 11.0], [250.0, 11.5], [248.0, 9.666666666666666], [269.0, 8.0], [270.0, 8.0], [268.0, 8.0], [259.0, 7.75], [258.0, 9.0], [267.0, 12.0], [266.0, 10.0], [265.0, 12.0], [264.0, 6.0], [263.0, 14.0], [262.0, 12.0], [260.0, 9.5], [280.0, 8.0], [285.0, 7.5], [283.0, 7.0], [282.0, 7.0], [281.0, 9.0], [279.0, 8.0], [278.0, 9.0], [276.0, 12.0], [274.0, 5.0], [273.0, 11.0], [272.0, 13.0], [301.0, 10.0], [302.0, 10.0], [300.0, 7.0], [291.0, 12.0], [290.0, 8.0], [289.0, 10.75], [299.0, 12.0], [297.0, 7.0], [296.0, 9.0], [294.0, 9.0], [293.0, 10.0], [292.0, 11.0], [317.0, 8.0], [319.0, 7.0], [316.0, 8.0], [315.0, 7.0], [314.0, 7.0], [312.0, 8.75], [308.0, 10.0], [307.0, 11.0], [305.0, 9.5], [306.0, 11.0], [334.0, 2.5], [335.0, 3.0], [332.0, 3.0], [331.0, 3.0], [330.0, 4.0], [329.0, 3.8], [324.0, 6.0], [322.0, 7.0], [320.0, 6.0], [349.0, 1.0], [351.0, 3.0], [348.0, 3.0], [339.0, 3.0], [337.0, 5.0], [336.0, 2.0], [347.0, 3.0], [346.0, 2.0], [345.0, 1.5], [343.0, 2.0], [342.0, 2.0], [340.0, 3.0], [366.0, 4.0], [364.0, 1.0], [355.0, 4.0], [354.0, 3.0], [352.0, 2.0], [363.0, 3.0], [362.0, 3.0], [361.0, 1.0], [360.0, 2.0], [359.0, 2.0], [358.0, 3.0], [357.0, 4.0], [356.0, 3.0], [382.0, 2.0], [383.0, 2.0], [381.0, 3.0], [380.0, 5.0], [379.0, 8.0], [378.0, 8.0], [377.0, 7.0], [376.0, 5.0], [375.0, 2.0], [368.0, 3.5], [371.0, 4.5], [370.0, 6.0], [374.0, 2.0], [373.0, 2.0], [372.0, 4.0], [398.0, 3.0], [399.0, 3.0], [396.0, 4.0], [386.0, 2.0], [385.0, 5.0], [384.0, 3.0], [395.0, 1.0], [394.0, 3.0], [393.0, 3.0], [392.0, 2.0], [390.0, 4.0], [389.0, 2.0], [388.0, 2.0], [414.0, 8.0], [413.0, 3.0], [403.0, 1.0], [402.0, 2.0], [401.0, 3.0], [400.0, 1.0], [411.0, 4.0], [410.0, 10.0], [409.0, 4.0], [408.0, 3.0], [407.0, 5.0], [406.0, 6.0], [405.0, 4.0], [404.0, 2.0], [430.0, 5.666666666666667], [427.0, 5.5], [425.0, 6.0], [424.0, 3.0], [423.0, 3.0], [422.0, 2.0], [421.0, 2.0], [420.0, 3.5], [418.0, 4.0], [416.0, 6.5], [446.0, 2.0], [447.0, 6.0], [445.0, 3.0], [444.0, 3.0], [443.0, 3.0], [442.0, 4.0], [440.0, 4.0], [439.0, 6.0], [432.0, 4.0], [434.0, 7.0], [433.0, 3.0], [438.0, 7.0], [437.0, 5.0], [436.0, 2.5], [462.0, 8.0], [463.0, 7.0], [461.0, 4.0], [460.0, 6.0], [458.0, 8.0], [457.0, 8.0], [456.0, 8.0], [455.0, 7.0], [450.0, 5.0], [449.0, 3.5], [454.0, 4.0], [453.0, 4.0], [452.0, 2.5], [478.0, 3.0], [479.0, 4.0], [477.0, 2.0], [476.0, 2.0], [475.0, 2.0], [474.0, 2.0], [473.0, 3.0], [472.0, 2.0], [471.0, 4.25], [465.0, 3.0], [464.0, 2.0], [467.0, 3.0], [466.0, 4.0], [494.0, 2.0], [495.0, 3.0], [492.0, 2.0], [483.0, 4.0], [481.0, 3.0], [491.0, 2.0], [490.0, 3.0], [489.0, 1.0], [488.0, 3.0], [487.0, 4.0], [486.0, 6.0], [485.0, 1.0], [484.0, 2.0], [510.0, 2.0], [511.0, 5.0], [509.0, 3.0], [508.0, 4.0], [507.0, 6.0], [506.0, 6.0], [504.0, 6.0], [503.0, 8.0], [497.0, 4.0], [496.0, 2.0], [499.0, 5.0], [498.0, 2.0], [502.0, 3.0], [501.0, 2.0], [500.0, 3.0], [537.0, 9.781249999999998], [542.0, 9.999999999999998], [543.0, 9.133333333333331], [529.0, 6.875000000000002], [528.0, 7.555555555555556], [530.0, 6.692307692307692], [531.0, 7.136363636363636], [540.0, 10.750000000000004], [539.0, 12.48717948717949], [538.0, 12.425531914893618], [541.0, 6.999999999999999], [536.0, 10.454545454545455], [519.0, 5.428571428571428], [518.0, 6.222222222222222], [517.0, 5.000000000000001], [516.0, 6.25], [515.0, 5.75], [514.0, 5.75], [513.0, 4.8999999999999995], [512.0, 7.0], [527.0, 8.714285714285714], [526.0, 8.2], [525.0, 9.571428571428573], [523.0, 8.066666666666666], [522.0, 6.833333333333333], [521.0, 9.0], [520.0, 6.818181818181818], [524.0, 7.111111111111111], [533.0, 7.227272727272728], [534.0, 8.037037037037036], [535.0, 6.714285714285715], [532.0, 6.928571428571429], [570.0, 11.161290322580644], [574.0, 17.585365853658537], [575.0, 15.102564102564104], [560.0, 19.553191489361694], [562.0, 13.878048780487802], [563.0, 14.483870967741936], [561.0, 14.260869565217396], [572.0, 22.31428571428571], [573.0, 16.864864864864867], [571.0, 21.86111111111111], [569.0, 18.68965517241379], [568.0, 13.347826086956525], [559.0, 16.763157894736842], [544.0, 9.90909090909091], [557.0, 9.5], [556.0, 13.270270270270268], [555.0, 10.454545454545453], [558.0, 10.190476190476192], [546.0, 9.62162162162162], [545.0, 12.031250000000002], [548.0, 12.714285714285714], [549.0, 11.700000000000001], [547.0, 14.058823529411766], [551.0, 17.205882352941174], [550.0, 11.516129032258066], [554.0, 11.031250000000002], [553.0, 16.575757575757574], [552.0, 13.666666666666668], [565.0, 16.750000000000004], [566.0, 17.448275862068968], [567.0, 18.366666666666664], [564.0, 17.37142857142857], [583.0, 18.750000000000004], [594.0, 15.347826086956522], [605.0, 17.857142857142858], [604.0, 17.272727272727273], [607.0, 19.200000000000003], [606.0, 22.333333333333332], [603.0, 23.655172413793107], [602.0, 18.0], [600.0, 18.400000000000002], [601.0, 22.352941176470587], [582.0, 13.631578947368421], [581.0, 9.148148148148145], [580.0, 14.19047619047619], [579.0, 16.967741935483872], [578.0, 12.5], [577.0, 13.977777777777778], [576.0, 11.574468085106384], [591.0, 10.750000000000002], [590.0, 8.59090909090909], [588.0, 7.0434782608695645], [587.0, 13.0625], [586.0, 10.382352941176473], [585.0, 12.482758620689657], [584.0, 17.666666666666664], [589.0, 10.352941176470592], [598.0, 11.333333333333332], [599.0, 8.15], [593.0, 21.84615384615385], [592.0, 16.3], [596.0, 13.185185185185185], [597.0, 19.193548387096776], [595.0, 15.916666666666668], [636.0, 22.0], [639.0, 20.666666666666664], [624.0, 18.71428571428571], [626.0, 24.625], [625.0, 15.142857142857142], [627.0, 15.545454545454543], [629.0, 9.000000000000002], [628.0, 17.5], [635.0, 21.53333333333334], [638.0, 18.25], [637.0, 20.2], [631.0, 15.066666666666665], [630.0, 26.0], [634.0, 12.625], [633.0, 23.799999999999997], [632.0, 9.5], [623.0, 19.0], [608.0, 16.000000000000004], [609.0, 14.5], [610.0, 23.666666666666668], [611.0, 23.0], [613.0, 21.0], [612.0, 10.642857142857142], [615.0, 14.428571428571429], [614.0, 29.076923076923077], [622.0, 6.75], [621.0, 21.69230769230769], [620.0, 6.2], [618.0, 11.0], [619.0, 37.4], [617.0, 22.0], [616.0, 15.833333333333332], [668.0, 27.6], [659.0, 21.666666666666668], [670.0, 24.0], [671.0, 25.499999999999996], [656.0, 21.857142857142858], [657.0, 22.73333333333333], [658.0, 28.8], [669.0, 16.66666666666667], [665.0, 36.666666666666664], [664.0, 17.200000000000006], [666.0, 28.142857142857146], [667.0, 18.57142857142857], [647.0, 10.484848484848484], [646.0, 13.538461538461537], [645.0, 31.5], [644.0, 19.5], [643.0, 23.133333333333333], [642.0, 26.611111111111114], [641.0, 26.272727272727273], [640.0, 16.7], [655.0, 26.656250000000004], [652.0, 24.470588235294112], [650.0, 15.238095238095239], [651.0, 24.71428571428571], [649.0, 15.88888888888889], [648.0, 13.096774193548388], [653.0, 22.764705882352942], [654.0, 18.153846153846153], [663.0, 22.2], [662.0, 30.473684210526315], [660.0, 22.88888888888889], [661.0, 29.999999999999996], [699.0, 17.19354838709678], [702.0, 26.769230769230766], [703.0, 21.11764705882353], [701.0, 20.518518518518512], [700.0, 21.10810810810811], [698.0, 20.41935483870968], [697.0, 19.516129032258075], [689.0, 22.088235294117652], [692.0, 21.75], [691.0, 13.857142857142854], [690.0, 18.888888888888893], [695.0, 15.62857142857143], [694.0, 10.821428571428573], [693.0, 23.93103448275862], [688.0, 24.090909090909086], [687.0, 22.733333333333334], [672.0, 20.090909090909093], [673.0, 22.666666666666668], [676.0, 21.499999999999996], [675.0, 17.909090909090907], [674.0, 19.350000000000005], [679.0, 20.6], [678.0, 35.12500000000001], [696.0, 10.89655172413793], [677.0, 43.71428571428572], [685.0, 14.7], [684.0, 12.307692307692307], [680.0, 36.23529411764706], [682.0, 17.923076923076923], [681.0, 13.294117647058822], [683.0, 14.964285714285714], [686.0, 18.23809523809524], [732.0, 32.28571428571429], [733.0, 22.708333333333336], [731.0, 30.676470588235293], [734.0, 27.891891891891895], [730.0, 21.62068965517241], [729.0, 25.320000000000007], [728.0, 20.535714285714292], [711.0, 18.499999999999996], [707.0, 22.124999999999996], [709.0, 20.5], [710.0, 15.714285714285715], [708.0, 24.142857142857146], [704.0, 15.000000000000002], [705.0, 24.294117647058822], [706.0, 18.666666666666668], [726.0, 14.571428571428573], [727.0, 13.833333333333334], [724.0, 22.461538461538453], [723.0, 11.461538461538465], [722.0, 13.5], [725.0, 13.068181818181817], [735.0, 17.538461538461533], [720.0, 20.064516129032256], [721.0, 16.85714285714285], [719.0, 26.093749999999996], [718.0, 15.36111111111111], [716.0, 20.638888888888893], [714.0, 34.234375000000014], [712.0, 19.1], [713.0, 18.153846153846153], [715.0, 20.064516129032253], [717.0, 29.04], [743.0, 25.130434782608695], [764.0, 17.560975609756103], [766.0, 24.925925925925924], [767.0, 17.06521739130435], [765.0, 19.0], [763.0, 23.275862068965516], [762.0, 19.000000000000004], [761.0, 30.773584905660368], [760.0, 24.875000000000004], [742.0, 37.5], [739.0, 25.625], [737.0, 15.545454545454545], [736.0, 20.61111111111111], [738.0, 19.333333333333332], [740.0, 39.45000000000001], [741.0, 34.176470588235304], [751.0, 26.699999999999992], [746.0, 23.043478260869566], [749.0, 15.973684210526317], [748.0, 16.392857142857142], [750.0, 15.558823529411763], [747.0, 26.074074074074073], [744.0, 56.51612903225806], [745.0, 20.2], [757.0, 21.550000000000004], [756.0, 14.500000000000002], [755.0, 15.090909090909093], [754.0, 19.342105263157894], [758.0, 19.92], [759.0, 13.125], [753.0, 15.903225806451612], [752.0, 16.441176470588236], [773.0, 12.373333333333333], [798.0, 15.74193548387097], [799.0, 19.3125], [795.0, 20.818181818181824], [797.0, 18.454545454545457], [796.0, 23.40909090909091], [792.0, 22.115384615384613], [793.0, 20.58333333333333], [794.0, 20.999999999999996], [772.0, 14.32075471698113], [770.0, 18.846153846153847], [769.0, 17.785714285714292], [768.0, 28.525000000000006], [771.0, 13.34090909090909], [774.0, 14.015625000000007], [775.0, 15.382978723404248], [786.0, 19.705882352941178], [789.0, 17.157894736842106], [791.0, 18.346153846153847], [790.0, 13.478260869565219], [788.0, 17.954545454545457], [787.0, 17.818181818181817], [782.0, 21.71111111111111], [781.0, 8.64864864864865], [780.0, 8.333333333333332], [783.0, 11.80487804878049], [778.0, 12.343283582089551], [776.0, 12.8], [777.0, 10.151898734177221], [779.0, 15.12195121951219], [784.0, 14.659574468085106], [785.0, 15.954545454545451], [824.0, 34.0], [818.0, 25.04], [823.0, 50.4], [822.0, 37.0], [821.0, 20.363636363636367], [820.0, 29.571428571428577], [819.0, 36.33333333333333], [817.0, 23.785714285714285], [816.0, 16.8], [828.0, 51.5], [830.0, 47.666666666666664], [829.0, 68.5], [827.0, 40.0], [826.0, 37.5], [825.0, 53.0], [831.0, 35.8], [815.0, 22.0], [803.0, 20.032258064516128], [804.0, 15.304347826086959], [802.0, 23.96774193548387], [801.0, 19.962962962962965], [800.0, 19.448275862068968], [806.0, 24.08333333333333], [807.0, 20.249999999999996], [805.0, 14.103448275862068], [814.0, 24.947368421052634], [812.0, 21.760000000000005], [813.0, 24.529411764705884], [810.0, 25.592592592592595], [809.0, 24.727272727272734], [808.0, 19.888888888888882], [811.0, 20.190476190476186], [857.0, 35.09090909090909], [862.0, 31.0], [863.0, 37.142857142857146], [851.0, 27.181818181818183], [850.0, 43.99999999999999], [849.0, 43.692307692307686], [848.0, 31.5625], [861.0, 31.6], [860.0, 23.2], [859.0, 26.5], [858.0, 28.812499999999996], [856.0, 31.0], [836.0, 93.0], [838.0, 45.333333333333336], [839.0, 37.0], [834.0, 40.333333333333336], [833.0, 59.333333333333336], [832.0, 43.8], [835.0, 62.0], [847.0, 40.0], [845.0, 31.0], [843.0, 27.5], [842.0, 44.0], [844.0, 37.333333333333336], [846.0, 25.4], [840.0, 34.5], [841.0, 40.8], [855.0, 42.909090909090914], [852.0, 36.81250000000001], [854.0, 39.95238095238095], [853.0, 27.0], [892.0, 20.6], [865.0, 44.400000000000006], [864.0, 42.31578947368421], [880.0, 26.368421052631582], [895.0, 24.666666666666664], [894.0, 26.0], [893.0, 24.75], [881.0, 71.72222222222221], [879.0, 26.90909090909091], [878.0, 67.11111111111111], [877.0, 65.52941176470588], [875.0, 82.33333333333333], [872.0, 65.55555555555554], [874.0, 106.10526315789474], [873.0, 99.4], [876.0, 63.8125], [882.0, 23.272727272727277], [883.0, 35.1], [887.0, 25.916666666666664], [886.0, 24.42857142857143], [885.0, 15.8], [884.0, 29.666666666666664], [890.0, 22.26315789473684], [888.0, 23.95], [870.0, 68.25], [871.0, 57.5], [869.0, 63.55555555555554], [868.0, 22.666666666666668], [867.0, 62.099999999999994], [866.0, 51.0], [889.0, 26.625], [891.0, 22.333333333333332], [901.0, 26.0], [896.0, 28.833333333333332], [911.0, 33.0], [908.0, 39.666666666666664], [907.0, 33.0], [905.0, 46.0], [897.0, 37.77777777777778], [899.0, 35.833333333333336], [903.0, 40.2], [902.0, 37.5], [917.0, 74.0], [919.0, 44.333333333333336], [918.0, 53.5], [927.0, 21.0], [913.0, 40.5], [912.0, 49.714285714285715], [925.0, 31.666666666666668], [924.0, 41.0], [926.0, 39.0], [923.0, 78.14285714285715], [922.0, 25.0], [920.0, 95.66666666666666], [921.0, 11.25], [931.0, 35.0], [933.0, 29.0], [935.0, 45.6], [934.0, 47.4], [953.0, 16.57142857142857], [952.0, 21.5], [930.0, 32.5], [928.0, 25.0], [929.0, 47.0], [943.0, 40.4], [942.0, 39.25], [940.0, 32.25], [941.0, 21.0], [939.0, 35.111111111111114], [937.0, 44.75], [938.0, 50.333333333333336], [936.0, 44.16666666666667], [945.0, 32.5], [948.0, 24.0], [947.0, 24.0], [946.0, 32.666666666666664], [949.0, 26.5], [951.0, 21.0], [950.0, 26.5], [954.0, 20.86363636363636], [955.0, 28.315789473684212], [956.0, 24.428571428571427], [958.0, 19.0], [944.0, 39.0], [957.0, 19.0], [989.0, 328.5], [990.0, 301.6666666666667], [991.0, 26.0], [977.0, 251.0], [976.0, 19.0], [980.0, 85.14285714285714], [981.0, 509.0], [979.0, 66.55555555555556], [978.0, 132.5], [986.0, 108.6], [988.0, 265.83333333333337], [987.0, 120.58823529411764], [985.0, 101.66666666666667], [982.0, 241.0], [983.0, 255.79999999999998], [984.0, 133.5], [968.0, 115.0], [1018.0, 145.0], [996.0, 21.739130434782613], [1022.0, 24.5], [1023.0, 215.0], [1021.0, 23.666666666666668], [1019.0, 215.5], [1020.0, 400.3333333333333], [1017.0, 247.5], [999.0, 366.0], [997.0, 9.333333333333334], [998.0, 7.666666666666666], [1006.0, 6.0], [1007.0, 9.5], [995.0, 240.0], [992.0, 20.0], [1005.0, 6.0], [1004.0, 481.0], [1003.0, 478.0], [1001.0, 325.33333333333337], [1000.0, 13.666666666666666], [1002.0, 9.0], [1009.0, 17.333333333333332], [1010.0, 90.66666666666667], [1012.0, 12.0], [1014.0, 16.0], [1015.0, 106.00000000000001], [1008.0, 8.25], [1074.0, 7.0], [1086.0, 203.71428571428572], [1068.0, 68.0], [1078.0, 107.24999999999999], [1080.0, 133.5], [1060.0, 10.75], [1058.0, 159.33333333333334], [1056.0, 184.0], [1062.0, 105.8], [1064.0, 86.99999999999999], [1076.0, 264.75], [1072.0, 13.0], [1038.0, 12.5], [1036.0, 13.0], [1032.0, 15.0], [1024.0, 184.0], [1026.0, 117.0], [1028.0, 158.33333333333331], [1052.0, 25.6], [1054.0, 13.0], [1050.0, 19.666666666666668], [1042.0, 18.6], [1040.0, 243.0], [1048.0, 2.0], [1046.0, 14.0], [1066.0, 29.5], [1122.0, 202.66666666666666], [1150.0, 27.2], [1124.0, 206.5], [1126.0, 176.0], [1134.0, 147.5], [1132.0, 183.75], [1148.0, 122.75], [1142.0, 174.0], [1138.0, 186.89999999999998], [1098.0, 153.5], [1094.0, 185.5], [1092.0, 183.5], [1088.0, 157.33333333333334], [1118.0, 187.33333333333334], [1110.0, 145.0], [1104.0, 163.0], [1206.0, 147.33333333333334], [1214.0, 134.5], [1184.0, 96.0], [1188.0, 104.2], [1190.0, 103.08333333333333], [1192.0, 96.44444444444444], [1196.0, 122.0], [1194.0, 97.75], [1198.0, 169.0], [1204.0, 130.33333333333334], [1212.0, 126.0], [1208.0, 151.26315789473685], [1202.0, 108.76923076923076], [1152.0, 31.5], [1156.0, 36.0], [1158.0, 174.0], [1160.0, 99.66666666666666], [1162.0, 184.0], [1166.0, 103.36363636363637], [1200.0, 101.66666666666667], [1164.0, 124.11764705882354], [1182.0, 127.25], [1178.0, 152.5], [1176.0, 74.6], [1170.0, 158.7], [1174.0, 70.0], [1172.0, 159.0], [1168.0, 151.33333333333331], [1180.0, 77.39999999999999], [1216.0, 124.63888888888889], [1079.0, 66.63636363636365], [1087.0, 141.66666666666666], [1083.0, 160.0], [1069.0, 479.0], [1059.0, 184.125], [1057.0, 113.69230769230768], [1063.0, 5.5], [1061.0, 12.5], [1065.0, 89.66666666666666], [1077.0, 135.66666666666669], [1075.0, 41.33333333333333], [1073.0, 148.0], [1039.0, 11.0], [1037.0, 255.5], [1031.0, 22.25], [1035.0, 19.0], [1033.0, 8.5], [1029.0, 22.0], [1027.0, 19.0], [1025.0, 219.5], [1055.0, 115.75000000000001], [1053.0, 150.66666666666669], [1041.0, 17.5], [1043.0, 13.0], [1047.0, 17.0], [1121.0, 164.6], [1147.0, 160.0], [1123.0, 172.46153846153845], [1125.0, 187.0], [1127.0, 151.2], [1129.0, 202.0], [1135.0, 177.0], [1149.0, 186.5], [1145.0, 101.33333333333334], [1143.0, 168.0], [1099.0, 207.0], [1095.0, 146.25], [1091.0, 206.0], [1117.0, 177.0], [1115.0, 158.5], [1113.0, 110.0], [1111.0, 208.0], [1107.0, 133.0], [1119.0, 143.0], [1139.0, 152.0], [1211.0, 119.5], [1185.0, 91.57142857142857], [1187.0, 118.0], [1189.0, 149.0], [1195.0, 137.66666666666666], [1193.0, 132.66666666666666], [1199.0, 100.8], [1197.0, 141.0], [1213.0, 136.44444444444446], [1207.0, 149.28571428571428], [1205.0, 145.33333333333334], [1209.0, 158.18181818181822], [1203.0, 173.0], [1183.0, 141.0], [1159.0, 82.66666666666666], [1153.0, 34.5], [1161.0, 145.33333333333334], [1163.0, 47.0], [1165.0, 123.5], [1167.0, 168.5], [1201.0, 103.15789473684212], [1179.0, 142.5], [1175.0, 158.0], [1173.0, 164.0], [1171.0, 90.5], [1169.0, 149.0], [1181.0, 92.71428571428571], [1217.0, 118.75]], "isOverall": false, "label": "15 Login Request", "isController": false}, {"data": [[713.3250999999985, 29.189400000000056]], "isOverall": false, "label": "15 Login Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1217.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 24265.65, "minX": 1.7427966E12, "maxY": 101503.83333333333, "series": [{"data": [[1.74279666E12, 101503.83333333333], [1.7427966E12, 40329.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74279666E12, 60850.85], [1.7427966E12, 24265.65]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74279666E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 15.26195681880293, "minX": 1.7427966E12, "maxY": 329.5468057739036, "series": [{"data": [[1.74279666E12, 329.5468057739036], [1.7427966E12, 177.07192807192828]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74279666E12, 15.26195681880293], [1.7427966E12, 67.19127516778535]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74279666E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 15.22861437551242, "minX": 1.7427966E12, "maxY": 329.5230813205653, "series": [{"data": [[1.74279666E12, 329.5230813205653], [1.7427966E12, 176.95937395937443]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74279666E12, 15.22861437551242], [1.7427966E12, 66.41722595078292]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74279666E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7427966E12, "maxY": 16.340326340326264, "series": [{"data": [[1.74279666E12, 1.633414320423036], [1.7427966E12, 16.340326340326264]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.74279666E12, 0.0], [1.7427966E12, 0.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74279666E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7427966E12, "maxY": 3443.0, "series": [{"data": [[1.74279666E12, 3443.0], [1.7427966E12, 791.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74279666E12, 1.0], [1.7427966E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74279666E12, 490.0], [1.7427966E12, 316.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74279666E12, 1638.8400000000001], [1.7427966E12, 643.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74279666E12, 33.0], [1.7427966E12, 66.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.74279666E12, 824.0], [1.7427966E12, 478.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74279666E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 483.0, "maxY": 220.0, "series": [{"data": [[582.0, 220.0], [687.0, 25.0], [801.0, 53.0], [859.0, 56.0], [916.0, 106.0], [924.0, 36.0], [905.0, 53.0], [960.0, 17.0], [984.0, 23.0], [964.0, 28.0], [970.0, 148.0], [997.0, 59.0], [1025.0, 91.0], [1070.0, 28.0], [1075.0, 87.0], [1106.0, 47.0], [1123.0, 32.0], [1173.0, 79.0], [1175.0, 19.0], [1221.0, 52.0], [483.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1221.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 483.0, "maxY": 220.0, "series": [{"data": [[582.0, 220.0], [687.0, 25.0], [801.0, 53.0], [859.0, 56.0], [916.0, 106.0], [924.0, 36.0], [905.0, 53.0], [960.0, 17.0], [984.0, 23.0], [964.0, 28.0], [970.0, 148.0], [997.0, 59.0], [1025.0, 91.0], [1070.0, 28.0], [1075.0, 87.0], [1106.0, 45.0], [1123.0, 32.0], [1173.0, 79.0], [1175.0, 19.0], [1221.0, 52.0], [483.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1221.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 96.31666666666666, "minX": 1.7427966E12, "maxY": 237.01666666666668, "series": [{"data": [[1.74279666E12, 237.01666666666668], [1.7427966E12, 96.31666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74279666E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 44.7, "minX": 1.7427966E12, "maxY": 121.96666666666667, "series": [{"data": [[1.74279666E12, 121.96666666666667], [1.7427966E12, 44.7]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.74279666E12, 116.61666666666666], [1.7427966E12, 50.05]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74279666E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 44.7, "minX": 1.7427966E12, "maxY": 121.96666666666667, "series": [{"data": [[1.74279666E12, 116.61666666666666], [1.7427966E12, 50.05]], "isOverall": false, "label": "14 Register Request-success", "isController": false}, {"data": [[1.74279666E12, 121.96666666666667], [1.7427966E12, 44.7]], "isOverall": false, "label": "15 Login Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74279666E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 94.75, "minX": 1.7427966E12, "maxY": 238.58333333333334, "series": [{"data": [[1.74279666E12, 238.58333333333334], [1.7427966E12, 94.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74279666E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

